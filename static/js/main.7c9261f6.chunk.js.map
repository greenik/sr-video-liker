{"version":3,"sources":["utils/video.js","components/Video/Video.js","components/Video/index.js","components/VideoList/VideoList.js","components/VideoList/index.js","components/VideoPlayer/VideoPlayer.js","components/VideoPlayer/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["getVideoProviderFromUrl","url","includes","getIdFromUrl","videoProvider","match","length","urlSplitted","split","getThumbnailFromUrl","a","provider","videoId","thumbnailUrl","fetch","then","response","json","thumbnail_url","Video","state","videoThumbnail","data","this","props","video_url","setState","onPlayVideo","isActive","className","onClick","src","alt","title","description","React","Component","defaultProps","VideoList","videos","activeVideo","map","video","key","id","VideoPlayer","player","initPlayer","videoUrl","Plyr","options","source","type","sources","prevProps","changeVideo","destroy","controls","i18n","restart","rewind","play","pause","fastForward","seek","seekLabel","played","buffered","currentTime","duration","volume","mute","unmute","enableCaptions","disableCaptions","download","enterFullscreen","exitFullscreen","frameTitle","captions","settings","menuBack","speed","normal","quality","loop","App","playVideo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c9261f6.chunk.js","sourcesContent":["function getVideoProviderFromUrl(url) {\n    if (!url) return null;\n    if (url.includes('youtu')) return 'youtube';\n    if (url.includes('vimeo')) return 'vimeo';\n    return null;\n}\n\nfunction getIdFromUrl(url) {\n    const videoProvider = getVideoProviderFromUrl(url);\n    if (videoProvider === 'youtube') {\n        const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n        const match = url.match(regExp);\n        return (match && match[7].length === 11) ? match[7] : false;\n    }\n    if (videoProvider === 'vimeo') {\n        const urlSplitted = url.split('/');\n        return urlSplitted[urlSplitted.length-1];\n    }\n    return null;\n}\n\nasync function getThumbnailFromUrl(url) {\n    const provider = getVideoProviderFromUrl(url);\n    const videoId = getIdFromUrl(url);\n    let thumbnailUrl;\n    if (provider === 'youtube') {\n        thumbnailUrl = `http://i3.ytimg.com/vi/${videoId}/maxresdefault.jpg`;\n    }\n    if (provider === 'vimeo') {\n        await fetch(`https://vimeo.com/api/oembed.json?url=${url}`)\n            .then(response => response.json())\n            .then(response => {\n                thumbnailUrl = response.thumbnail_url;\n            });\n    }\n    return thumbnailUrl;\n}\n\nexport { getVideoProviderFromUrl, getIdFromUrl, getThumbnailFromUrl };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Video.scss';\nimport { getThumbnailFromUrl } from '../../utils/video';\n\n\nclass Video extends React.Component {\n    state = {\n        videoThumbnail: null\n    }\n\n    async componentDidMount() {\n        const { data } = this.props;\n        const videoThumbnail = await getThumbnailFromUrl(data.video_url);\n        this.setState({ videoThumbnail });\n    }\n    render() {\n        const { data, onPlayVideo, isActive } = this.props;\n        const { videoThumbnail } = this.state;\n        return (\n            <div className={`video ${isActive ? 'active' : ''}`} onClick={() => onPlayVideo(data)}>\n                <div className=\"video__thumbnail\">\n                    <img src={videoThumbnail} alt=\"Thumbnail\" />\n                </div>\n                <div className=\"video__info\">\n                    <h5 className=\"video__title\">{data.title}</h5>\n                    <p className=\"video__description\">{data.description}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nVideo.defaultProps = {\n    data: {\n        title: '',\n        description: '',\n        video_url: ''\n    },\n    isActive: false,\n    onPlayVideo: () => {}\n};\n\nVideo.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        video_url: PropTypes.string\n    }),\n    isActive: PropTypes.bool,\n    onPlayVideo: PropTypes.func\n};\n\n\nexport default Video;\n","import Video from './Video';\n\nexport default Video;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './VideoList.scss';\nimport Video from '../Video';\n\nclass VideoList extends React.Component {\n    render() {\n        const { videos, onPlayVideo, activeVideo } = this.props;\n        return (\n            <div className=\"video-list\">\n                <div className=\"video-list__container\">\n                    {videos.map((video) => <Video key={`video-${video.id}`} isActive={video.id === activeVideo.id} onPlayVideo={onPlayVideo} data={video}/>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nVideoList.defaultProps = {\n    videos: [],\n    activeVideo: {},\n    onPlayVideo: () => {}\n};\n\nVideoList.propTypes = {\n    videos: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        video_url: PropTypes.string\n    })),\n    activeVideo: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        video_url: PropTypes.string\n    }),\n    onPlayVideo: PropTypes.func\n};\n\nexport default VideoList;\n","import VideoList from './VideoList';\n\nexport default VideoList;","import React from 'react'\nimport Plyr from 'plyr'\nimport 'plyr/dist/plyr.css'\n\nimport './VideoPlayer.scss'\nimport { getIdFromUrl, getVideoProviderFromUrl } from '../../utils/video';\n\nclass VideoPlayer extends React.Component {\n    player = null;\n\n    componentDidMount() {\n        this.initPlayer();\n    }\n\n    initPlayer() {\n        const { videoUrl } = this.props;\n        const videoId = getIdFromUrl(videoUrl);\n        const videoProvider = getVideoProviderFromUrl(videoUrl);\n        if(videoId) {\n            this.player = new Plyr('.js-plyr', this.props.options);\n            this.player.source = {\n                type: 'video',\n                sources: [{\n                    src: videoId,\n                    provider: videoProvider\n                }]\n            };\n        }\n    }\n\n    changeVideo(videoUrl) {\n        const videoId = getIdFromUrl(videoUrl);\n        const videoProvider = getVideoProviderFromUrl(videoUrl);\n        this.player.source = {\n            type: 'video',\n            sources: [\n                {\n                    src: videoId,\n                    provider: videoProvider\n                },\n            ],\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.videoUrl !== this.props.videoUrl) {\n            if(this.player) {\n                this.changeVideo(this.props.videoUrl);\n            } else {\n                this.initPlayer();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.player.destroy();\n    }\n\n    render() {\n        return (\n            <video className=\"js-plyr plyr\"></video>\n        )\n    }\n}\n\nVideoPlayer.defaultProps = {\n    options: {\n        controls: [\n            'play-large',\n            'play',\n            'progress',\n            'mute',\n            'volume',\n            'fullscreen',\n        ],\n        i18n: {\n            restart: 'Restart',\n            rewind: 'Rewind {seektime}s',\n            play: 'Play',\n            pause: 'Pause',\n            fastForward: 'Forward {seektime}s',\n            seek: 'Seek',\n            seekLabel: '{currentTime} of {duration}',\n            played: 'Played',\n            buffered: 'Buffered',\n            currentTime: 'Current time',\n            duration: 'Duration',\n            volume: 'Volume',\n            mute: 'Mute',\n            unmute: 'Unmute',\n            enableCaptions: 'Enable captions',\n            disableCaptions: 'Disable captions',\n            download: 'Download',\n            enterFullscreen: 'Enter fullscreen',\n            exitFullscreen: 'Exit fullscreen',\n            frameTitle: 'Player for {title}',\n            captions: 'Captions',\n            settings: 'Settings',\n            menuBack: 'Go back to previous menu',\n            speed: 'Speed',\n            normal: 'Normal',\n            quality: 'Quality',\n            loop: 'Loop',\n        },\n    },\n    videoUrl: ''\n}\n\nexport default VideoPlayer;","import VideoPlayer from './VideoPlayer';\n\nexport default VideoPlayer;","import App from './App';\n\nexport default App;","import React from 'react';\n\nimport './App.scss';\nimport VideoList from '../VideoList';\nimport VideoPlayer from '../VideoPlayer';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            videos: [],\n            activeVideo: null\n        };\n    }\n\n    componentDidMount() {\n        fetch('database.json')\n            .then(response => response.json())\n            .then(videos => this.setState({ videos, activeVideo: videos[0] }));\n    }\n\n    playVideo = (video) => {\n        this.setState({activeVideo: video});\n    }\n\n    render() {\n        const { videos, activeVideo } = this.state;\n        return (\n            <div className=\"App\">\n                <header className=\"App__header\">Video Liker</header>\n                <div className=\"App__player\">\n                    <VideoPlayer videoUrl={activeVideo?.video_url} />\n                </div>\n                <div className=\"App__videos\">\n                    <VideoList onPlayVideo={this.playVideo} activeVideo={activeVideo} videos={videos} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}